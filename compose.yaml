version: '3.8'

services:
  app:
    image: advibe:${APP_VERSION}
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BOOTSTRAP_SERVERS:-kafka:9092}
      - CASSANDRA_CONTACT_POINTS=${CASSANDRA_CONTACT_POINTS:-cassandra}
      - CASSANDRA_PORT=${CASSANDRA_PORT:-9042}
      - CASSANDRA_KEYSPACE=${CASSANDRA_KEYSPACE:-advibe_keyspace}
      - CASSANDRA_USERNAME=${CASSANDRA_USERNAME:-cassandra}
      - CASSANDRA_PASSWORD=${CASSANDRA_PASSWORD:-cassandra}
    depends_on:
      kafka:
        condition: service_healthy
      cassandra:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network
    ports:
      - "8080:8080"

  zookeeper:
    image: bitnami/zookeeper:3.9-debian-12
    ports:
      - "2181:2181"
    environment:
      - ZOO_ENABLE_AUTH=yes
      - ZOO_SERVER_ID=1
      - ZOO_SERVERS=zookeeper:2888:3888
    networks:
      - app-network

  kafka:
    image: bitnami/kafka:3.3-debian-12
    environment:
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092,EXTERNAL_LISTENER://0.0.0.0:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL_LISTENER://localhost:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,EXTERNAL_LISTENER:PLAINTEXT
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "localhost:29092"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  cassandra:
    image: bitnami/cassandra:5.0-debian-12
    environment:
      - CASSANDRA_KEYSPACE=${CASSANDRA_KEYSPACE:-advibe_keyspace}
      - CASSANDRA_CLUSTER_NAME=dev-cassandra-cluster
      - CASSANDRA_DC=datacenter1
      - CASSANDRA_AUTHENTICATOR=AllowAllAuthenticator
      - CASSANDRA_AUTHORIZER=AllowAllAuthorizer
      - CASSANDRA_ENABLE_REMOTE_CONNECTIONS=true
      - CASSANDRA_USERNAME=${CASSANDRA_USERNAME:-cassandra}
      - CASSANDRA_PASSWORD=${CASSANDRA_PASSWORD:-cassandra}
    ports:
      - "9042:9042"
    volumes:
      - cassandra-data:/bitnami/cassandra
      - ./init-cassandra:/docker-entrypoint-initdb.d/
    #    - ./init-cassandra/cassandra.yaml:/opt/bitnami/cassandra/conf/cassandra.yaml
    #     This above line, causes cassandra container to crash because it is appearantly too
    #     'busy' to mount a simple config file, and at this point I'm too burned out
    #     to see why and explore alternative approaches.
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "cqlsh", "-u", "cassandra", "-p", "cassandra", "-e", "describe keyspaces"]
      interval: 10s
      timeout: 5s
      retries: 100
    restart: unless-stopped

volumes:
  cassandra-data:

networks:
  app-network:
    driver: bridge
